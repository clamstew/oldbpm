/*

    Objects
        Holds all game objects

    An example of how an object would render an image:
        Graphic g; //Assume Graphic is a _renderable that renders an image
        g.setDepth(-10);
        myObj.addRender(g);
        //Then when myObj is removed 'g' is also removed automatically
*/

define[]
    return {
    }

function _gameObject()
    state //the state this object belongs to

    onCreate //Called when added to the state
    onRemove //Called when removed from the state


function Pin()

function Shooter()

function Bubble()


// Collision planning

GameObject
    x, y, width, height
    idList = []
    getCollisions(id ...) - returns objects with specified IDs that are colliding with this

pin
    check if colliding with 'bubble'

bubble
    id = 'bubble'
    no collision checking // probably better performance
    if offscreen: bounce


With every getCollisions call you'll have to cycle through every game object which is not good when you have 10000 bubbles. So a way of increasing speed:
    state
        pinList

    bubble
        check for collision with pin
            loop through pinList and find collision

    This is much faster since you'd only be cycling through a small list of pins every frame.

