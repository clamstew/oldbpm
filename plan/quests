What a quest needs:

    Name: "My Quest"
    Description: This could be story information or anything. This is not the precise details on what you should do. e.g. kill 4 bubbles that should be automated
    Reward: 100  # Money
    ID: "m04", "s02" # m for main, s for sidequest, number will be used for priority sorting in the quest list for the ui.
    Unlocks: ["mo5", "s08"] # if this quest is completed then it will add the array of quests (from ids) to the quest list. If unlocks is not specified it will unlock the next sequence e.g. m02 unlocks mo3
    Details: {
        // Some of these will have to be made special for a particular quest. They will also need to provide a description somehow.
        multiplier: 10, // Achieve a multiplier of 10
        popBubbles: 20, // Pop 20 bubbles
        fightBigBubble: true, // Fight the big bubble boss.
    }

A possible example of how to create a new detail:

    addDetail('multiplier', 'Achieve a multiplier of VAL'); // this design will most likely change

    addDetail('popBubbles', function(goal) { // Another possible example
        return "Pop " + goal + " bubbles."; // Shown while quest is selected.
    }, function(status, goal) {
        return status + " bubbles popped out of " + goal; // Shown while quest is in progress. If not specified then it will just show the default (first) detail description.
    });

    // How to implement it. In Field.update
    if (curQuest.detail.multiplier) {
        if (multiplier >= curQuest.detail.multiplier) {
            curQuest.complete('multiplier');
        }
    }

What each quest instance needs:

    details // An object containing quest details
        name, value // e.g. multiplier: 10
        status // detail status. e.g. with bubble count 20/50 bubbles the 20 would be status. If status is not given then we just log the detail's description.

    reward
    name
    description
    id
    unlocks

    complete(detailName) // Completes a detail of a quest
        add detail to completedDetails
        if all details are completed:
            set completed to true
            // Might do the following in RoundCompleteMenu
            add quests in 'unlocks' to the available quests array
            give reward
            set currentQuest to null

    completedDetails // The names of the details completed

    completed // Is the quest completed?

Storage of quests:

    // A list of all available quests. This will be sorted in reverse by id. So main quests should be first and those will be sorted by highest id, then sidequests and those will also be sorted by highest id.
    quests = [];
    currentQuest; // A quest instance

